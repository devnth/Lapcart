2022/08/13 16:02:37 
Connected to database: lapcart
2022/08/13 16:02:37 Api is listening on port: 8080
2022/08/13 16:06:42 
Connected to database: lapcart
2022/08/13 16:06:42 Api is listening on port: 8080
2022/08/13 23:29:28 
Connected to database: lapcart
2022/08/13 23:29:28 Api is listening on port: 8080
2022/08/14 08:51:18 
Connected to database: lapcart
2022/08/14 08:51:18 Api is listening on port: 8080
2022/08/14 08:53:48 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/14 08:55:01 
Connected to database: lapcart
2022/08/14 08:55:01 Api is listening on port: 8080
2022/08/14 08:55:45 
Connected to database: lapcart
2022/08/14 08:55:45 Api is listening on port: 8080
2022/08/14 08:55:49 
	      Update 
			product 
		  SET is_deleted = true 
		  WHERE 
2022/08/14 08:56:53 
	      Update 
			product 
		  SET is_deleted = true 
		  WHERE 
2022/08/14 08:57:46 
	      Update 
			product 
		  SET is_deleted = true 
		  WHERE id = $1;
2022/08/14 08:58:20 
	      Update 
			product 
		  SET is_deleted = true 
		  WHERE code = $1;
2022/08/14 09:03:06 
Connected to database: lapcart
2022/08/14 09:03:06 Api is listening on port: 8080
2022/08/14 09:03:15 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE is_delete = false
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/14 09:03:15 Error Query prepare failed:  pq: column "is_delete" does not exist
2022/08/14 09:04:16 
Connected to database: lapcart
2022/08/14 09:04:16 Api is listening on port: 8080
2022/08/14 09:04:19 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/14 09:04:19 Error Query prepare failed:  pq: column "p.is_deleted" must appear in the GROUP BY clause or be used in an aggregate function
2022/08/14 09:04:41 
Connected to database: lapcart
2022/08/14 09:04:41 Api is listening on port: 8080
2022/08/14 09:04:44 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/14 09:06:00 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND p.code IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 09:12:02 
Connected to database: lapcart
2022/08/14 09:12:02 Api is listening on port: 8080
2022/08/14 09:15:15 
Connected to database: lapcart
2022/08/14 09:15:15 Api is listening on port: 8080
2022/08/14 09:19:20 
Connected to database: lapcart
2022/08/14 09:19:20 Api is listening on port: 8080
2022/08/14 09:19:24 1     10
2022/08/14 09:19:50 2     10
2022/08/14 09:20:18 1     10
2022/08/14 10:22:43 
Connected to database: lapcart
2022/08/14 10:22:43 Api is listening on port: 8080
2022/08/14 10:23:24 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:23:38 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2OR p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:23:47 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2OR p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:24:18 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2OR p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:24:44 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2OR p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:24:53 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND ( p.name ILIKE $2OR p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:25:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)AND ( p.name ILIKE $3OR p.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:25:23 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)AND ( p.name ILIKE $3OR p.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:25:28 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)AND ( p.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:26:07 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:26:08 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:26:26 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND  (p.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:27:09 
Connected to database: lapcart
2022/08/14 10:27:09 Api is listening on port: 8080
2022/08/14 10:27:12 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (proc.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:27:12 Error Query prepare failed:  pq: missing FROM-clause entry for table "proc"
2022/08/14 10:27:31 
Connected to database: lapcart
2022/08/14 10:27:31 Api is listening on port: 8080
2022/08/14 10:27:36 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:27:52 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2ORpr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:27:52 Error Query prepare failed:  pq: syntax error at or near "ORpr"
2022/08/14 10:28:14 
Connected to database: lapcart
2022/08/14 10:28:14 Api is listening on port: 8080
2022/08/14 10:28:16 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:28:25 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:28:34 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:28:44 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:28:48 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:29:04 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:29:07 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:29:13 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:29:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:32:53 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:33:33 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:35:01 
Connected to database: lapcart
2022/08/14 10:35:01 Api is listening on port: 8080
2022/08/14 10:35:10 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2, $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:35:16 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:35:37 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:37:03 
Connected to database: lapcart
2022/08/14 10:37:03 Api is listening on port: 8080
2022/08/14 10:37:07 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:38:48 
Connected to database: lapcart
2022/08/14 10:38:48 Api is listening on port: 8080
2022/08/14 10:38:53 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:39:22 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND pr.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:40:44 
Connected to database: lapcart
2022/08/14 10:40:44 Api is listening on port: 8080
2022/08/14 10:40:49 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:40:49 Error Query prepare failed:  pq: syntax error at or near "$2"
2022/08/14 10:41:11 
Connected to database: lapcart
2022/08/14 10:41:11 Api is listening on port: 8080
2022/08/14 10:41:13 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:41:13 Error Query prepare failed:  pq: syntax error at or near "$2"
2022/08/14 10:41:37 
Connected to database: lapcart
2022/08/14 10:41:37 Api is listening on port: 8080
2022/08/14 10:41:39 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/14 10:41:54 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:42:05 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (pr.name ILIKE $2OR pr.name ILIKE $3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/14 10:43:38 
Connected to database: lapcart
2022/08/14 10:43:38 Api is listening on port: 8080
2022/08/14 10:43:48 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color $2)AND (pr.name ILIKE $3OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:43:48 Error Query prepare failed:  pq: syntax error at or near "$2"
2022/08/14 10:44:41 
Connected to database: lapcart
2022/08/14 10:44:41 Api is listening on port: 8080
2022/08/14 10:44:43 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:44:43 Error Query prepare failed:  pq: syntax error at or near "$2"
2022/08/14 10:45:23 
Connected to database: lapcart
2022/08/14 10:45:23 Api is listening on port: 8080
2022/08/14 10:45:25 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:45:37 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:45:43 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:45:52 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:58:33 
Connected to database: lapcart
2022/08/14 10:58:33 Api is listening on port: 8080
2022/08/14 10:58:42 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 10:58:47 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/14 11:38:31 
Connected to database: lapcart
2022/08/14 11:38:31 Api is listening on port: 8080
2022/08/14 11:38:49 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)LIMIT $5 OFFSET $6;
2022/08/14 11:39:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)LIMIT $5 OFFSET $6;
2022/08/14 11:39:52 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.price $5LIMIT $5 OFFSET $6;
2022/08/14 11:39:52 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:41:14 
Connected to database: lapcart
2022/08/14 11:41:14 Api is listening on port: 8080
2022/08/14 11:41:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.price $5 LIMIT $6 OFFSET $7;
2022/08/14 11:41:17 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:41:18 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.price $5 LIMIT $6 OFFSET $7;
2022/08/14 11:41:18 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:43:23 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.price $5 LIMIT $6 OFFSET $7;
2022/08/14 11:43:23 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:44:42 
Connected to database: lapcart
2022/08/14 11:44:42 Api is listening on port: 8080
2022/08/14 11:44:45 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.discount_price $5 
							LIMIT $6 OFFSET $7;
2022/08/14 11:44:45 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:44:46 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					p.discount_price $5 
							LIMIT $6 OFFSET $7;
2022/08/14 11:44:46 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:48:29 
Connected to database: lapcart
2022/08/14 11:48:29 Api is listening on port: 8080
2022/08/14 11:48:31 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					discount_price $5 
							LIMIT $6 OFFSET $7;
2022/08/14 11:48:31 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:49:04 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					discount_price $5 
							LIMIT $6 OFFSET $7;
2022/08/14 11:49:04 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:49:59 
Connected to database: lapcart
2022/08/14 11:49:59 Api is listening on port: 8080
2022/08/14 11:50:00 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					discount_price $5 
							LIMIT $6 OFFSET $7;
2022/08/14 11:50:00 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:51:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
								ORDER BY 
								p.created_at $5
							LIMIT $6 OFFSET $7;
2022/08/14 11:51:11 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:51:28 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
								ORDER BY 
								p.name $5
							LIMIT $6 OFFSET $7;
2022/08/14 11:51:28 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:51:34 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
								ORDER BY 
								p.name $5
							LIMIT $6 OFFSET $7;
2022/08/14 11:51:34 Error Query prepare failed:  pq: syntax error at or near "$5"
2022/08/14 11:52:54 
Connected to database: lapcart
2022/08/14 11:52:54 Api is listening on port: 8080
2022/08/14 11:53:04 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
					ORDER BY 
					discount_price asc 
							LIMIT $5 OFFSET $6;
2022/08/14 11:54:21 
Connected to database: lapcart
2022/08/14 11:54:21 Api is listening on port: 8080
2022/08/14 11:54:52 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (p.color ILIKE $2)AND (pr.name ILIKE $3 OR pr.name ILIKE $4)
								ORDER BY 
								p.created_at desc
							LIMIT $5 OFFSET $6;
2022/08/14 12:02:50 
Connected to database: lapcart
2022/08/14 12:02:50 Api is listening on port: 8080
2022/08/14 12:03:44 
Connected to database: lapcart
2022/08/14 12:03:44 Api is listening on port: 8080
2022/08/14 12:03:46 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 
							LIMIT $2 OFFSET $3;
2022/08/14 12:09:12 
Connected to database: lapcart
2022/08/14 12:09:12 Api is listening on port: 8080
2022/08/14 12:09:16 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (price BETWEEN $2 AND $3)
							LIMIT $4 OFFSET $5;
2022/08/14 12:09:16 Error Query Exec failed:  sql: expected 5 arguments, got 3
2022/08/14 12:09:49 
Connected to database: lapcart
2022/08/14 12:09:49 Api is listening on port: 8080
2022/08/14 12:09:51 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (price BETWEEN $2 AND $3)
							LIMIT $4 OFFSET $5;
2022/08/14 12:10:56 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (price BETWEEN $2 AND $3)
							LIMIT $4 OFFSET $5;
2022/08/14 12:11:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors,
				  p.is_deleted,
				  p.created_at
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist,
				  p.is_deleted,
				  p.created_at
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				  WHERE p.is_deleted = false
				 AND (price BETWEEN $2 AND $3)
							LIMIT $4 OFFSET $5;
2022/08/14 12:17:17 
Connected to database: lapcart
2022/08/14 12:17:17 Api is listening on port: 8080
2022/08/14 12:17:26 
	      Update 
			product 
		  SET is_deleted = true , deleted_at = $1
		  WHERE code = $2;
2022/08/14 12:18:12 
Connected to database: lapcart
2022/08/14 12:18:12 Api is listening on port: 8080
2022/08/14 12:18:14 
	      Update 
			product 
		  SET is_deleted = true , deleted_at = $1
		  WHERE code = $2;
2022/08/14 14:16:09 
Connected to database: lapcart
2022/08/14 14:16:09 Api is listening on port: 8080
2022/08/14 14:33:58 
Connected to database: lapcart
2022/08/14 14:33:58 Api is listening on port: 8080
2022/08/14 14:37:54 
Connected to database: lapcart
2022/08/14 14:37:54 Api is listening on port: 8080
2022/08/14 14:41:08 
Connected to database: lapcart
2022/08/14 14:41:08 Api is listening on port: 8080
2022/08/14 14:47:40 
Connected to database: lapcart
2022/08/14 14:47:40 Api is listening on port: 8080
