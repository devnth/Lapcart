2022/07/26 10:09:08 
Connected to database: lapcart
2022/07/26 10:09:08 Api is listening on port: 8000
2022/07/26 10:10:06 
Connected to database: lapcart
2022/07/26 10:10:06 Api is listening on port: 8000
2022/07/26 10:10:45 
Connected to database: lapcart
2022/07/26 10:10:45 Api is listening on port: 8000
2022/07/26 10:12:47 
Connected to database: lapcart
2022/07/26 10:12:47 Api is listening on port: 8000
2022/07/26 10:13:16 
Connected to database: lapcart
2022/07/26 10:13:16 Api is listening on port: 8000
2022/07/26 10:13:47 
Connected to database: lapcart
2022/07/26 10:13:47 Api is listening on port: 8000
2022/07/26 10:16:34 
Connected to database: lapcart
2022/07/26 10:16:34 Api is listening on port: 8000
2022/07/26 10:23:46 
Connected to database: lapcart
2022/07/26 10:23:46 Api is listening on port: 8000
2022/07/26 11:21:45 
Connected to database: lapcart
2022/07/26 11:21:45 Api is listening on port: 8000
2022/07/26 14:15:12 
Connected to database: lapcart
2022/07/26 14:15:12 Api is listening on port: 8000
2022/07/26 14:16:37 
Connected to database: lapcart
2022/07/26 14:16:37 Api is listening on port: 8000
2022/07/26 14:41:44 
Connected to database: lapcart
2022/07/26 14:41:44 Api is listening on port: 8000
2022/07/26 14:42:45 
Connected to database: lapcart
2022/07/26 14:42:45 Api is listening on port: 8000
2022/07/26 14:43:05 
Connected to database: lapcart
2022/07/26 14:43:05 Api is listening on port: 8000
2022/07/26 15:34:08 
Connected to database: lapcart
2022/07/26 15:34:08 Api is listening on port: 8000
2022/07/26 15:36:46 
Connected to database: lapcart
2022/07/26 15:36:46 Api is listening on port: 8000
2022/07/26 15:38:56 
Connected to database: lapcart
2022/07/26 15:38:56 Api is listening on port: 8000
2022/07/26 15:39:43 
Connected to database: lapcart
2022/07/26 15:39:43 Api is listening on port: 8000
2022/07/26 15:42:16 
Connected to database: lapcart
2022/07/26 15:42:16 Api is listening on port: 8000
2022/07/27 13:22:58 
Connected to database: lapcart
2022/07/27 13:22:58 Api is listening on port: 8000
2022/07/27 13:25:12 
Connected to database: lapcart
2022/07/27 13:25:12 Api is listening on port: 8000
2022/07/27 13:29:55 
Connected to database: lapcart
2022/07/27 13:29:55 Api is listening on port: 8000
2022/07/27 13:31:29 
Connected to database: lapcart
2022/07/27 13:31:29 Api is listening on port: 8000
2022/07/27 13:33:09 
Connected to database: lapcart
2022/07/27 13:33:09 Api is listening on port: 8000
2022/07/27 13:34:44 
Connected to database: lapcart
2022/07/27 13:34:44 Api is listening on port: 8000
2022/07/27 13:37:33 
Connected to database: lapcart
2022/07/27 13:37:33 Api is listening on port: 8000
2022/07/27 13:39:32 
Connected to database: lapcart
2022/07/27 13:39:32 Api is listening on port: 8000
2022/07/27 13:42:30 
Connected to database: lapcart
2022/07/27 13:42:30 Api is listening on port: 8000
2022/07/27 13:43:04 
Connected to database: lapcart
2022/07/27 13:43:04 Api is listening on port: 8000
2022/07/27 13:45:14 
Connected to database: lapcart
2022/07/27 13:45:14 Api is listening on port: 8000
2022/07/27 13:47:14 
Connected to database: lapcart
2022/07/27 13:47:14 Api is listening on port: 8000
2022/07/27 13:48:37 
Connected to database: lapcart
2022/07/27 13:48:37 Api is listening on port: 8000
2022/07/27 13:49:01 
Connected to database: lapcart
2022/07/27 13:49:01 Api is listening on port: 8000
2022/07/27 13:51:23 
Connected to database: lapcart
2022/07/27 13:51:23 Api is listening on port: 8000
2022/07/27 13:53:08 
Connected to database: lapcart
2022/07/27 13:53:08 Api is listening on port: 8000
2022/07/27 13:58:09 
Connected to database: lapcart
2022/07/27 13:58:09 Api is listening on port: 8000
2022/07/27 13:59:43 
Connected to database: lapcart
2022/07/27 13:59:43 Api is listening on port: 8000
2022/07/27 14:00:19 
Connected to database: lapcart
2022/07/27 14:00:19 Api is listening on port: 8000
2022/07/27 14:01:19 
Connected to database: lapcart
2022/07/27 14:01:19 Api is listening on port: 8000
2022/07/27 14:05:50 
Connected to database: lapcart
2022/07/27 14:05:50 Api is listening on port: 8000
2022/07/27 14:06:28 
Connected to database: lapcart
2022/07/27 14:06:28 Api is listening on port: 8000
2022/07/27 14:08:07 
Connected to database: lapcart
2022/07/27 14:08:07 Api is listening on port: 8000
2022/07/27 14:20:23 
Connected to database: lapcart
2022/07/27 14:20:23 Api is listening on port: 8000
2022/07/27 14:25:54 
Connected to database: lapcart
2022/07/27 14:25:54 Api is listening on port: 8000
2022/07/27 14:26:59 
Connected to database: lapcart
2022/07/27 14:26:59 Api is listening on port: 8000
2022/07/27 14:27:43 
Connected to database: lapcart
2022/07/27 14:27:43 Api is listening on port: 8000
2022/07/27 14:28:35 
Connected to database: lapcart
2022/07/27 14:28:35 Api is listening on port: 8000
2022/07/27 14:51:30 
Connected to database: lapcart
2022/07/27 14:51:30 Api is listening on port: 8000
2022/07/27 14:53:36 
Connected to database: lapcart
2022/07/27 14:53:36 Api is listening on port: 8000
2022/07/27 14:56:24 
Connected to database: lapcart
2022/07/27 14:56:24 Api is listening on port: 8000
2022/07/27 15:02:51 
Connected to database: lapcart
2022/07/27 15:02:51 Api is listening on port: 8000
2022/07/27 15:05:27 
Connected to database: lapcart
2022/07/27 15:05:27 Api is listening on port: 8000
2022/07/27 15:10:07 
Connected to database: lapcart
2022/07/27 15:10:07 Api is listening on port: 8000
2022/07/27 15:11:04 
Connected to database: lapcart
2022/07/27 15:11:04 Api is listening on port: 8000
2022/07/27 15:12:43 
Connected to database: lapcart
2022/07/27 15:12:43 Api is listening on port: 8000
2022/07/27 15:14:23 
Connected to database: lapcart
2022/07/27 15:14:23 Api is listening on port: 8000
2022/07/27 15:18:10 
Connected to database: lapcart
2022/07/27 15:18:10 Api is listening on port: 8000
2022/07/27 15:19:26 
Connected to database: lapcart
2022/07/27 15:19:26 Api is listening on port: 8000
2022/07/27 15:22:05 
Connected to database: lapcart
2022/07/27 15:22:05 Api is listening on port: 8000
2022/07/27 15:26:10 
Connected to database: lapcart
2022/07/27 15:26:10 Api is listening on port: 8000
2022/07/27 15:26:58 
Connected to database: lapcart
2022/07/27 15:26:58 Api is listening on port: 8000
2022/07/27 15:32:01 
Connected to database: lapcart
2022/07/27 15:32:01 Api is listening on port: 8000
2022/07/28 09:27:49 
Connected to database: lapcart
2022/07/28 09:27:49 Api is listening on port: 8000
2022/07/28 09:29:35 
Connected to database: lapcart
2022/07/28 09:29:35 Api is listening on port: 8000
2022/07/28 09:55:19 
Connected to database: lapcart
2022/07/28 09:55:19 Api is listening on port: 8000
2022/07/28 10:01:00 
Connected to database: lapcart
2022/07/28 10:01:00 Api is listening on port: 8000
2022/07/28 10:01:26 
Connected to database: lapcart
2022/07/28 10:01:26 Api is listening on port: 8000
2022/07/28 10:13:43 
Connected to database: lapcart
2022/07/28 10:13:43 Api is listening on port: 8000
2022/07/28 11:23:34 
Connected to database: lapcart
2022/07/28 11:23:34 Api is listening on port: 8000
2022/07/28 11:25:04 
Connected to database: lapcart
2022/07/28 11:25:04 Api is listening on port: 8000
2022/07/28 11:30:12 
Connected to database: lapcart
2022/07/28 11:30:12 Api is listening on port: 8000
2022/07/28 11:52:55 
Connected to database: lapcart
2022/07/28 11:52:55 Api is listening on port: 8000
2022/07/28 11:53:29 
Connected to database: lapcart
2022/07/28 11:53:29 Api is listening on port: 8000
2022/07/28 11:53:57 
Connected to database: lapcart
2022/07/28 11:53:57 Api is listening on port: 8000
2022/07/28 11:54:13 
Connected to database: lapcart
2022/07/28 11:54:13 Api is listening on port: 8000
2022/07/28 11:57:07 
Connected to database: lapcart
2022/07/28 11:57:07 Api is listening on port: 8000
2022/07/28 12:27:12 
Connected to database: lapcart
2022/07/28 12:27:12 Api is listening on port: 8000
2022/07/28 12:28:00 
Connected to database: lapcart
2022/07/28 12:28:00 Api is listening on port: 8000
2022/07/28 12:32:18 
Connected to database: lapcart
2022/07/28 12:32:18 Api is listening on port: 8000
2022/07/28 14:29:45 
Connected to database: lapcart
2022/07/28 14:29:45 Api is listening on port: 8000
2022/07/28 14:33:07 
Connected to database: lapcart
2022/07/28 14:33:07 Api is listening on port: 8000
2022/07/28 14:34:49 
Connected to database: lapcart
2022/07/28 14:34:49 Api is listening on port: 8000
2022/07/28 14:36:38 
Connected to database: lapcart
2022/07/28 14:36:38 Api is listening on port: 8000
2022/07/28 14:37:17 
Connected to database: lapcart
2022/07/28 14:37:17 Api is listening on port: 8000
2022/07/28 14:51:56 
Connected to database: lapcart
2022/07/28 14:51:56 Api is listening on port: 8000
2022/07/28 14:52:22 
Connected to database: lapcart
2022/07/28 14:52:22 Api is listening on port: 8000
2022/07/28 15:02:18 
Connected to database: lapcart
2022/07/28 15:02:18 Api is listening on port: 8000
2022/07/28 15:04:56 
Connected to database: lapcart
2022/07/28 15:04:56 Api is listening on port: 8000
2022/07/28 15:05:24 
Connected to database: lapcart
2022/07/28 15:05:24 Api is listening on port: 8000
2022/07/28 15:06:45 
Connected to database: lapcart
2022/07/28 15:06:45 Api is listening on port: 8000
2022/07/28 15:07:32 
Connected to database: lapcart
2022/07/28 15:07:32 Api is listening on port: 8000
2022/07/28 15:09:50 
Connected to database: lapcart
2022/07/28 15:09:50 Api is listening on port: 8000
2022/07/28 15:10:10 
Connected to database: lapcart
2022/07/28 15:10:10 Api is listening on port: 8000
2022/07/28 15:10:38 
Connected to database: lapcart
2022/07/28 15:10:38 Api is listening on port: 8000
2022/07/29 17:05:56 
Connected to database: lapcart
2022/07/29 17:05:56 Api is listening on port: 8000
2022/07/30 13:33:18 
Connected to database: lapcart
2022/07/30 13:33:18 Api is listening on port: 8000
2022/07/30 13:38:56 
Connected to database: lapcart
2022/07/30 13:38:56 Api is listening on port: 8000
2022/07/30 13:39:42 
Connected to database: lapcart
2022/07/30 13:39:42 Api is listening on port: 8000
2022/07/30 13:40:26 
Connected to database: lapcart
2022/07/30 13:40:26 Api is listening on port: 8000
2022/07/30 13:42:18 
Connected to database: lapcart
2022/07/30 13:42:18 Api is listening on port: 8000
2022/07/30 13:43:15 
Connected to database: lapcart
2022/07/30 13:43:15 Api is listening on port: 8000
2022/07/30 13:46:07 
Connected to database: lapcart
2022/07/30 13:46:07 Api is listening on port: 8000
2022/07/30 13:50:09 
Connected to database: lapcart
2022/07/30 13:50:09 Api is listening on port: 8000
2022/07/30 13:53:38 
Connected to database: lapcart
2022/07/30 13:53:38 Api is listening on port: 8000
2022/07/30 15:19:46 
Connected to database: lapcart
2022/07/30 15:19:46 Api is listening on port: 8000
2022/07/30 15:22:06 
Connected to database: lapcart
2022/07/30 15:22:06 Api is listening on port: 8000
2022/07/30 15:24:14 
Connected to database: lapcart
2022/07/30 15:24:14 Api is listening on port: 8000
2022/07/30 15:27:03 
Connected to database: lapcart
2022/07/30 15:27:03 Api is listening on port: 8000
2022/07/30 15:29:49 
Connected to database: lapcart
2022/07/30 15:29:49 Api is listening on port: 8000
2022/07/30 15:30:13 
Connected to database: lapcart
2022/07/30 15:30:13 Api is listening on port: 8000
2022/07/30 15:31:20 
Connected to database: lapcart
2022/07/30 15:31:20 Api is listening on port: 8000
2022/07/30 15:32:32 
Connected to database: lapcart
2022/07/30 15:32:32 Api is listening on port: 8000
2022/07/30 15:33:00 
Connected to database: lapcart
2022/07/30 15:33:00 Api is listening on port: 8000
2022/07/30 15:33:55 
Connected to database: lapcart
2022/07/30 15:33:55 Api is listening on port: 8000
2022/07/30 15:34:44 
Connected to database: lapcart
2022/07/30 15:34:44 Api is listening on port: 8000
2022/07/30 15:35:35 
Connected to database: lapcart
2022/07/30 15:35:35 Api is listening on port: 8000
2022/07/30 15:36:34 
Connected to database: lapcart
2022/07/30 15:36:34 Api is listening on port: 8000
2022/07/31 18:30:42 
Connected to database: lapcart
2022/07/31 18:30:42 Api is listening on port: 8000
2022/07/31 18:34:03 
Connected to database: lapcart
2022/07/31 18:34:03 Api is listening on port: 8000
2022/07/31 18:34:05 http: panic serving [::1]:51190: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x1400022a8c0}, 0x1400023a300)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x1400022a8c0?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x1400022a8c0}, 0x1400023a300)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x1400022a8c0?}, 0x140002262e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x1400022a8c0?}, 0x140002100a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x1400022a8c0}, 0x1400023a300)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400023a200?, {0x129e3db78?, 0x1400022a8c0?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x1400022c0e0}, 0x1400023a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x1400022c0e0?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x1400022c0e0}, 0x1400023a100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140002046f0?}, {0x102a82cc0, 0x1400022c0e0}, 0x1400023a100)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x1400021f040, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:34:11 http: panic serving [::1]:51201: runtime error: invalid memory address or nil pointer dereference
goroutine 5 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x1400002a200}, 0x14000286200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x1400002a200?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x1400002a200}, 0x14000286200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x1400002a200?}, 0x14000292078?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x1400002a200?}, 0x14000022044?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x1400002a200}, 0x14000286200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x14000286100?, {0x129e3db78?, 0x1400002a200?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x1400028e000}, 0x14000286100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x1400028e000?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x1400028e000}, 0x14000286000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000280090?}, {0x102a82cc0, 0x1400028e000}, 0x14000286000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x14000282000, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:34:12 http: panic serving [::1]:51205: runtime error: invalid memory address or nil pointer dereference
goroutine 8 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x1400002a400}, 0x14000286600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x1400002a400?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x1400002a400}, 0x14000286600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x1400002a400?}, 0x14000292218?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x1400002a400?}, 0x140000220c4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x1400002a400}, 0x14000286600)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x14000286500?, {0x129e3db78?, 0x1400002a400?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x1400028e0e0}, 0x14000286500)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x1400028e0e0?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x1400028e0e0}, 0x14000286400)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140002804b0?}, {0x102a82cc0, 0x1400028e0e0}, 0x14000286400)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x14000282140, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:34:12 http: panic serving [::1]:51207: runtime error: invalid memory address or nil pointer dereference
goroutine 11 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x1400022aa40}, 0x1400023a600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x1400022aa40?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x1400022aa40}, 0x1400023a600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x1400022aa40?}, 0x140002267c8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x1400022aa40?}, 0x14000210144?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x1400022aa40}, 0x1400023a600)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400023a500?, {0x129e3db78?, 0x1400022aa40?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x1400022c1c0}, 0x1400023a500)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x1400022c1c0?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x1400022c1c0}, 0x14000286800)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140002808d0?}, {0x102a82cc0, 0x1400022c1c0}, 0x14000286800)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x14000282280, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:34:13 http: panic serving [::1]:51210: runtime error: invalid memory address or nil pointer dereference
goroutine 13 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x1400002a700}, 0x14000286c00)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x1400002a700?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x1400002a700}, 0x14000286c00)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x1400002a700?}, 0x140002922e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x1400002a700?}, 0x14000022144?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x1400002a700}, 0x14000286c00)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x14000286b00?, {0x129e3db78?, 0x1400002a700?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x1400028e1c0}, 0x14000286b00)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x1400028e1c0?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x1400028e1c0}, 0x14000286a00)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000280ab0?}, {0x102a82cc0, 0x1400028e1c0}, 0x14000286a00)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140002823c0, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:34:13 http: panic serving [::1]:51212: runtime error: invalid memory address or nil pointer dereference
goroutine 24 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102a2f500, 0x102c3fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x10278c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129e3db78, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x102a597a0?, {0x129e3db78?, 0x14000146d80?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129e3db78, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129e3db78?, 0x14000146d80?}, 0x14000119b48?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102a2d5a0?, {0x129e3db78?, 0x14000146d80?}, 0x14000154ac4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129e3db78, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400019a300?, {0x129e3db78?, 0x14000146d80?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102a82cc0, 0x140001de000}, 0x1400019a300)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102a82f30?, {0x102a82cc0?, 0x140001de000?}, 0x102c3feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102a82cc0, 0x140001de000}, 0x1400019a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000117c80?}, {0x102a82cc0, 0x140001de000}, 0x1400019a200)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001c8280, {0x102a82fd8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:35:31 
Connected to database: lapcart
2022/07/31 18:35:31 Api is listening on port: 8000
2022/07/31 18:37:10 
Connected to database: lapcart
2022/07/31 18:37:10 Api is listening on port: 8000
2022/07/31 18:37:45 http: panic serving [::1]:51413: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x105253500, 0x105463ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a6060, 0x1?, {0x4?, 0x104fb02c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x10584d9f8, 0x140000baa40}, 0x140000c2800)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x10527d7a0?, {0x10584d9f8?, 0x140000baa40?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x10584d9f8, 0x140000baa40}, 0x140000c2800)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000094330?, {0x10584d9f8?, 0x140000baa40?}, 0x140000b62e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1052515a0?, {0x10584d9f8?, 0x140000baa40?}, 0x140000a01c4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x10584d9f8, 0x140000baa40}, 0x140000c2800)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140000c2700?, {0x10584d9f8?, 0x140000baa40?}, 0x104f618d4?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1052a6cc0, 0x140000bc460}, 0x140000c2700)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1052a6f30?, {0x1052a6cc0?, 0x140000bc460?}, 0x105463eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x1052a6cc0, 0x140000bc460}, 0x140000c2600)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000094660?}, {0x1052a6cc0, 0x140000bc460}, 0x140000c2600)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140000af040, {0x1052a6fd8, 0x14000094510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:38:39 
Connected to database: lapcart
2022/07/31 18:38:39 Api is listening on port: 8000
2022/07/31 18:38:42 http: panic serving [::1]:51506: runtime error: invalid memory address or nil pointer dereference
goroutine 24 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x1050eb500, 0x1052fbff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a6060, 0x1400012a008?, {0x14000169548?, 0x4?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x12c463af8, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:114 +0x128
net/http.HandlerFunc.ServeHTTP(0x1051157a0?, {0x12c463af8?, 0x14000146d80?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x12c463af8, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000094330?, {0x12c463af8?, 0x14000146d80?}, 0x14000119a78?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1050e95a0?, {0x12c463af8?, 0x14000146d80?}, 0x14000154ac4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x12c463af8, 0x14000146d80}, 0x1400019a400)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400019a300?, {0x12c463af8?, 0x14000146d80?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x10513ece0, 0x140001e4000}, 0x1400019a300)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x10513ef50?, {0x10513ece0?, 0x140001e4000?}, 0x1052fbeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x10513ece0, 0x140001e4000}, 0x1400019a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000117c80?}, {0x10513ece0, 0x140001e4000}, 0x1400019a200)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001c8280, {0x10513eff8, 0x14000094510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:40:06 
Connected to database: lapcart
2022/07/31 18:40:06 Api is listening on port: 8000
2022/07/31 18:40:08 http: panic serving [::1]:51597: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102993500, 0x102ba3ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x1026f02c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129d459f8, 0x1400022a840}, 0x1400023a200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1029bd7a0?, {0x129d459f8?, 0x1400022a840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129d459f8, 0x1400022a840}, 0x1400023a200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x129d459f8?, 0x1400022a840?}, 0x140002262e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1029915a0?, {0x129d459f8?, 0x1400022a840?}, 0x140002100a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140001143c0, {0x129d459f8, 0x1400022a840}, 0x1400023a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400023a100?, {0x129d459f8?, 0x1400022a840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1029e6ce0, 0x1400022c0e0}, 0x1400023a100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1029e6f50?, {0x1029e6ce0?, 0x1400022c0e0?}, 0x102ba3eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140001143c0, {0x1029e6ce0, 0x1400022c0e0}, 0x1400023a000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000204660?}, {0x1029e6ce0, 0x1400022c0e0}, 0x1400023a000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x1400021f040, {0x1029e6ff8, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:40:44 
Connected to database: lapcart
2022/07/31 18:40:44 Api is listening on port: 8000
2022/07/31 18:40:46 http: panic serving [::1]:51647: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x1027bb500, 0x1029cbff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a4060, 0x1?, {0x4?, 0x1025182c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x129b001a8, 0x140000b8840}, 0x140000c8200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1027e57a0?, {0x129b001a8?, 0x140000b8840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129b001a8, 0x140000b8840}, 0x140000c8200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000092330?, {0x129b001a8?, 0x140000b8840?}, 0x140000b42e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1027b95a0?, {0x129b001a8?, 0x140000b8840?}, 0x1400009e0a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x129b001a8, 0x140000b8840}, 0x140000c8200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140000c8100?, {0x129b001a8?, 0x140000b8840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x10280ece0, 0x140000ba0e0}, 0x140000c8100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x10280ef50?, {0x10280ece0?, 0x140000ba0e0?}, 0x1029cbeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x10280ece0, 0x140000ba0e0}, 0x140000c8000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000092660?}, {0x10280ece0, 0x140000ba0e0}, 0x140000c8000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140000ad040, {0x10280eff8, 0x14000092510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:41:50 
Connected to database: lapcart
2022/07/31 18:41:50 Api is listening on port: 8000
2022/07/31 18:41:53 http: panic serving [::1]:51719: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x10087f500, 0x100a8fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a6060, 0x1?, {0x4?, 0x1005dc2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductsUser.func1({0x127bf4a68, 0x14000144cc0}, 0x1400019a300)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1008a97a0?, {0x127bf4a68?, 0x14000144cc0?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x127bf4a68, 0x14000144cc0}, 0x1400019a300)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000094330?, {0x127bf4a68?, 0x14000144cc0?}, 0x140001198d8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x10087d5a0?, {0x127bf4a68?, 0x14000144cc0?}, 0x14000152ac4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x127bf4a68, 0x14000144cc0}, 0x1400019a300)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400019a200?, {0x127bf4a68?, 0x14000144cc0?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1008d2ce0, 0x140001da000}, 0x1400019a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1008d2f50?, {0x1008d2ce0?, 0x140001da000?}, 0x100a8feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x1008d2ce0, 0x140001da000}, 0x140000c2100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140000946f0?}, {0x1008d2ce0, 0x140001da000}, 0x140000c2100)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140000af040, {0x1008d2ff8, 0x14000094510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:43:05 
Connected to database: lapcart
2022/07/31 18:43:05 Api is listening on port: 8000
2022/07/31 18:43:07 http: panic serving [::1]:51801: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x105263520, 0x105473ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000198060, 0x1?, {0x4?, 0x104fc02c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x12c5d0178, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x10528d7c0?, {0x12c5d0178?, 0x140001ac840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x12c5d0178, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000186330?, {0x12c5d0178?, 0x140001ac840?}, 0x140001a82e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1052615c0?, {0x12c5d0178?, 0x140001ac840?}, 0x140001920a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x12c5d0178, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140001b4100?, {0x12c5d0178?, 0x140001ac840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1052b6d00, 0x140001ae0e0}, 0x140001b4100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1052b6f70?, {0x1052b6d00?, 0x140001ae0e0?}, 0x105473eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x1052b6d00, 0x140001ae0e0}, 0x140001b4000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000186660?}, {0x1052b6d00, 0x140001ae0e0}, 0x140001b4000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001a1040, {0x1052b7018, 0x14000186510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:43:08 http: panic serving [::1]:51806: runtime error: invalid memory address or nil pointer dereference
goroutine 6 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x105263520, 0x105473ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000198060, 0x1?, {0x4?, 0x104fc02c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x12c5d0178, 0x1400002a200}, 0x14000208200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x10528d7c0?, {0x12c5d0178?, 0x1400002a200?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x12c5d0178, 0x1400002a200}, 0x14000208200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000186330?, {0x12c5d0178?, 0x1400002a200?}, 0x14000214078?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1052615c0?, {0x12c5d0178?, 0x1400002a200?}, 0x14000022044?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x12c5d0178, 0x1400002a200}, 0x14000208200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x14000208100?, {0x12c5d0178?, 0x1400002a200?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1052b6d00, 0x14000210000}, 0x14000208100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1052b6f70?, {0x1052b6d00?, 0x14000210000?}, 0x105473eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x1052b6d00, 0x14000210000}, 0x14000208000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140002020f0?}, {0x1052b6d00, 0x14000210000}, 0x14000208000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140002040a0, {0x1052b7018, 0x14000186510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:43:08 http: panic serving [::1]:51808: runtime error: invalid memory address or nil pointer dereference
goroutine 9 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x105263520, 0x105473ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000198060, 0x1?, {0x4?, 0x104fc02c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x12c5d0178, 0x1400002a400}, 0x14000208600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x10528d7c0?, {0x12c5d0178?, 0x1400002a400?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x12c5d0178, 0x1400002a400}, 0x14000208600)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000186330?, {0x12c5d0178?, 0x1400002a400?}, 0x14000214218?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1052615c0?, {0x12c5d0178?, 0x1400002a400?}, 0x140000220c4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x12c5d0178, 0x1400002a400}, 0x14000208600)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x14000208500?, {0x12c5d0178?, 0x1400002a400?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1052b6d00, 0x140002100e0}, 0x14000208500)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1052b6f70?, {0x1052b6d00?, 0x140002100e0?}, 0x105473eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x1052b6d00, 0x140002100e0}, 0x14000208400)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000202510?}, {0x1052b6d00, 0x140002100e0}, 0x14000208400)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140002041e0, {0x1052b7018, 0x14000186510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:43:48 
Connected to database: lapcart
2022/07/31 18:43:48 Api is listening on port: 8000
2022/07/31 18:43:50 http: panic serving [::1]:51856: runtime error: invalid memory address or nil pointer dereference
goroutine 24 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x101213520, 0x101423ff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000198060, 0x140000b0008?, {0x140000f1488?, 0x1?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x10858d9b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:115 +0xd8
net/http.HandlerFunc.ServeHTTP(0x10123d7c0?, {0x10858d9b8?, 0x140001ac840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x10858d9b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000186330?, {0x10858d9b8?, 0x140001ac840?}, 0x140001a82e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1012115c0?, {0x10858d9b8?, 0x140001ac840?}, 0x140001920a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x10858d9b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140001b4100?, {0x10858d9b8?, 0x140001ac840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x101266d10, 0x140001ae0e0}, 0x140001b4100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x101266f80?, {0x101266d10?, 0x140001ae0e0?}, 0x101423eb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x101266d10, 0x140001ae0e0}, 0x14000122200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x1400009dc80?}, {0x101266d10, 0x140001ae0e0}, 0x14000122200)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x14000150280, {0x101267028, 0x14000186510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:44:03 
Connected to database: lapcart
2022/07/31 18:44:03 Api is listening on port: 8000
2022/07/31 18:44:05 http: panic serving [::1]:51883: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x10278f520, 0x10299fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000198060, 0x1?, {0x4?, 0x30000007d?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x129af19b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:113 +0x94
net/http.HandlerFunc.ServeHTTP(0x1027b97c0?, {0x129af19b8?, 0x140001ac840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x129af19b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000186330?, {0x129af19b8?, 0x140001ac840?}, 0x140001a82e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x10278d5c0?, {0x129af19b8?, 0x140001ac840?}, 0x140001920a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x129af19b8, 0x140001ac840}, 0x140001b4200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140001b4100?, {0x129af19b8?, 0x140001ac840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1027e2d10, 0x140001ae0e0}, 0x140001b4100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1027e2f80?, {0x1027e2d10?, 0x140001ae0e0?}, 0x10299feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x1027e2d10, 0x140001ae0e0}, 0x140001b4000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000186660?}, {0x1027e2d10, 0x140001ae0e0}, 0x140001b4000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001a1040, {0x1027e3028, 0x14000186510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:44:20 
Connected to database: lapcart
2022/07/31 18:44:20 Api is listening on port: 8000
2022/07/31 18:44:22 http: panic serving [::1]:51915: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x1023af520, 0x1025bfff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000216060, 0x1?, {0x4?, 0x30000007d?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x1297b8200, 0x1400022a800}, 0x1400023a200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:113 +0x94
net/http.HandlerFunc.ServeHTTP(0x1023d97c0?, {0x1297b8200?, 0x1400022a800?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x1297b8200, 0x1400022a800}, 0x1400023a200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000204330?, {0x1297b8200?, 0x1400022a800?}, 0x140002262e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1023ad5c0?, {0x1297b8200?, 0x1400022a800?}, 0x140002100a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x1297b8200, 0x1400022a800}, 0x1400023a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400023a100?, {0x1297b8200?, 0x1400022a800?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102402d10, 0x1400022c0e0}, 0x1400023a100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102402f80?, {0x102402d10?, 0x1400022c0e0?}, 0x1025bfeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x102402d10, 0x1400022c0e0}, 0x1400023a000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000204660?}, {0x102402d10, 0x1400022c0e0}, 0x1400023a000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x1400021f040, {0x102403028, 0x14000204510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:44:41 
Connected to database: lapcart
2022/07/31 18:44:41 Api is listening on port: 8000
2022/07/31 18:44:43 http: panic serving [::1]:51947: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x102e9b520, 0x1030abff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000196060, 0x1?, {0x4?, 0x30?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x10a2501c0, 0x140001aa840}, 0x140001ba200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:113 +0x94
net/http.HandlerFunc.ServeHTTP(0x102ec57c0?, {0x10a2501c0?, 0x140001aa840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x10a2501c0, 0x140001aa840}, 0x140001ba200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000184330?, {0x10a2501c0?, 0x140001aa840?}, 0x140001a62e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x102e995c0?, {0x10a2501c0?, 0x140001aa840?}, 0x140001900a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140000b23c0, {0x10a2501c0, 0x140001aa840}, 0x140001ba200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x140001ba100?, {0x10a2501c0?, 0x140001aa840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x102eeed10, 0x140001ac0e0}, 0x140001ba100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x102eeef80?, {0x102eeed10?, 0x140001ac0e0?}, 0x1030abeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140000b23c0, {0x102eeed10, 0x140001ac0e0}, 0x140001ba000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000184660?}, {0x102eeed10, 0x140001ac0e0}, 0x140001ba000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x1400019f040, {0x102eef028, 0x14000184510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:45:58 
Connected to database: lapcart
2022/07/31 18:45:58 Api is listening on port: 8000
2022/07/31 18:46:02 http: panic serving [::1]:52041: runtime error: invalid memory address or nil pointer dereference
goroutine 24 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x1008bf520, 0x100acfff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a6060, 0x1?, {0x4?, 0x10061c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:109 +0x9c
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x127c2e490, 0x14000144d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1008e97c0?, {0x127c2e490?, 0x14000144d80?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x127c2e490, 0x14000144d80}, 0x1400019a400)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000094330?, {0x127c2e490?, 0x14000144d80?}, 0x14000119668?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1008bd5c0?, {0x127c2e490?, 0x14000144d80?}, 0x14000152ac4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x127c2e490, 0x14000144d80}, 0x1400019a400)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400019a300?, {0x127c2e490?, 0x14000144d80?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x100912d00, 0x140001e6000}, 0x1400019a300)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x100912f70?, {0x100912d00?, 0x140001e6000?}, 0x100acfeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x100912d00, 0x140001e6000}, 0x1400019a200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x14000117c80?}, {0x100912d00, 0x140001e6000}, 0x1400019a200)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001c8280, {0x100913018, 0x14000094510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:46:03 http: panic serving [::1]:52044: runtime error: invalid memory address or nil pointer dereference
goroutine 27 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x1008bf520, 0x100acfff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x140000a6060, 0x1?, {0x4?, 0x10061c2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:109 +0x9c
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x127c2e490, 0x14000144f80}, 0x1400019a800)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1008e97c0?, {0x127c2e490?, 0x14000144f80?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x127c2e490, 0x14000144f80}, 0x1400019a800)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x14000094330?, {0x127c2e490?, 0x14000144f80?}, 0x14000119b48?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x1008bd5c0?, {0x127c2e490?, 0x14000144f80?}, 0x14000152b64?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x1400012c3c0, {0x127c2e490, 0x14000144f80}, 0x1400019a800)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400019a700?, {0x127c2e490?, 0x14000144f80?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x100912d00, 0x140001e60e0}, 0x1400019a700)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x100912f70?, {0x100912d00?, 0x140001e60e0?}, 0x100acfeb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x1400012c3c0, {0x100912d00, 0x140001e60e0}, 0x1400019a600)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x140001ec240?}, {0x100912d00, 0x140001e60e0}, 0x1400019a600)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x140001c83c0, {0x100913018, 0x14000094510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:46:48 
Connected to database: lapcart
2022/07/31 18:46:48 Api is listening on port: 8000
2022/07/31 18:46:52 http: panic serving [::1]:52100: runtime error: invalid memory address or nil pointer dereference
goroutine 35 [running]:
net/http.(*conn).serve.func1()
	/usr/local/go/src/net/http/server.go:1825 +0xb0
panic({0x10104f520, 0x10125fff0})
	/usr/local/go/src/runtime/panic.go:844 +0x258
lapcart/service.(*userService).GetAllProductsUser(0x14000220060, 0x1?, {0x4?, 0x100dac2c0?})
	/Users/devanath/Documents/Go WorkSpace/Lapcart/service/user.service.go:108 +0x58
lapcart/handler/v1.(*userHandler).GetAllProductUser.func1({0x1283b4178, 0x14000234840}, 0x1400023c200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/handler/v1/user.handler.go:112 +0x94
net/http.HandlerFunc.ServeHTTP(0x1010797c0?, {0x1283b4178?, 0x14000234840?}, 0x7?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
lapcart/middleware.(*middleware).AuthorizeJwt.func1({0x1283b4178, 0x14000234840}, 0x1400023c200)
	/Users/devanath/Documents/Go WorkSpace/Lapcart/middleware/middleware.go:65 +0x374
net/http.HandlerFunc.ServeHTTP(0x1400020e330?, {0x1283b4178?, 0x14000234840?}, 0x140002302e8?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*ChainHandler).ServeHTTP(0x10104d5c0?, {0x1283b4178?, 0x14000234840?}, 0x1400021a0a4?)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/chain.go:31 +0x34
github.com/go-chi/chi.(*Mux).routeHTTP(0x140001143c0, {0x1283b4178, 0x14000234840}, 0x1400023c200)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:436 +0x21c
net/http.HandlerFunc.ServeHTTP(0x1400023c100?, {0x1283b4178?, 0x14000234840?}, 0xd0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi/middleware.RequestLogger.func1.1({0x1010a2d00, 0x140002360e0}, 0x1400023c100)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/middleware/logger.go:57 +0x2f0
net/http.HandlerFunc.ServeHTTP(0x1010a2f70?, {0x1010a2d00?, 0x140002360e0?}, 0x10125feb0?)
	/usr/local/go/src/net/http/server.go:2084 +0x3c
github.com/go-chi/chi.(*Mux).ServeHTTP(0x140001143c0, {0x1010a2d00, 0x140002360e0}, 0x1400023c000)
	/Users/devanath/go/pkg/mod/github.com/go-chi/chi@v1.5.4/mux.go:87 +0x414
net/http.serverHandler.ServeHTTP({0x1400020e660?}, {0x1010a2d00, 0x140002360e0}, 0x1400023c000)
	/usr/local/go/src/net/http/server.go:2916 +0x3fc
net/http.(*conn).serve(0x14000229040, {0x1010a3018, 0x1400020e510})
	/usr/local/go/src/net/http/server.go:1966 +0x56c
created by net/http.(*Server).Serve
	/usr/local/go/src/net/http/server.go:3071 +0x450
2022/07/31 18:47:38 
Connected to database: lapcart
2022/07/31 18:47:38 Api is listening on port: 8000
2022/07/31 18:48:34 
Connected to database: lapcart
2022/07/31 18:48:34 Api is listening on port: 8000
2022/07/31 18:49:55 
Connected to database: lapcart
2022/07/31 18:49:55 Api is listening on port: 8000
2022/07/31 18:50:59 
Connected to database: lapcart
2022/07/31 18:50:59 Api is listening on port: 8000
2022/07/31 18:59:12 
Connected to database: lapcart
2022/07/31 18:59:12 Api is listening on port: 8000
2022/07/31 20:06:33 
Connected to database: lapcart
2022/07/31 20:06:33 Api is listening on port: 8000
2022/08/01 09:58:39 
Connected to database: lapcart
2022/08/01 09:58:39 Api is listening on port: 8000
2022/08/01 10:16:19 
Connected to database: lapcart
2022/08/01 10:16:19 Api is listening on port: 8000
2022/08/01 10:17:20 
Connected to database: lapcart
2022/08/01 10:17:20 Api is listening on port: 8000
2022/08/01 10:23:12 
Connected to database: lapcart
2022/08/01 10:23:12 Api is listening on port: 8000
2022/08/01 10:31:08 
Connected to database: lapcart
2022/08/01 10:31:08 Api is listening on port: 8000
2022/08/01 10:39:05 
Connected to database: lapcart
2022/08/01 10:39:05 Api is listening on port: 8000
2022/08/01 10:39:07 Category id Gaming Laptop
2022/08/01 10:39:34 Category id Apple
2022/08/01 10:40:34 Category id Apple
2022/08/01 10:42:54 Category id Apple
2022/08/01 10:45:31 
Connected to database: lapcart
2022/08/01 10:45:31 Api is listening on port: 8000
2022/08/01 10:45:32 Category id Apple
2022/08/01 10:47:23 
Connected to database: lapcart
2022/08/01 10:47:23 Api is listening on port: 8000
2022/08/01 14:18:06 
Connected to database: lapcart
2022/08/01 14:18:06 Api is listening on port: 8000
2022/08/01 14:19:41 
Connected to database: lapcart
2022/08/01 14:19:41 Api is listening on port: 8000
2022/08/01 14:26:23 
Connected to database: lapcart
2022/08/01 14:26:23 Api is listening on port: 8000
2022/08/01 14:28:26 
Connected to database: lapcart
2022/08/01 14:28:26 Api is listening on port: 8000
2022/08/01 14:52:04 
Connected to database: lapcart
2022/08/01 14:52:04 Api is listening on port: 8000
2022/08/01 14:52:30 
Connected to database: lapcart
2022/08/01 14:52:30 Api is listening on port: 8000
2022/08/01 15:02:56 
Connected to database: lapcart
2022/08/01 15:02:56 Api is listening on port: 8000
2022/08/01 15:03:39 
Connected to database: lapcart
2022/08/01 15:03:39 Api is listening on port: 8000
2022/08/01 15:08:08 
Connected to database: lapcart
2022/08/01 15:08:08 Api is listening on port: 8000
2022/08/01 15:09:56 
Connected to database: lapcart
2022/08/01 15:09:56 Api is listening on port: 8000
2022/08/01 15:10:21 
Connected to database: lapcart
2022/08/01 15:10:21 Api is listening on port: 8000
2022/08/01 15:11:49 
Connected to database: lapcart
2022/08/01 15:11:49 Api is listening on port: 8000
2022/08/01 15:14:35 
Connected to database: lapcart
2022/08/01 15:14:35 Api is listening on port: 8000
2022/08/01 15:21:15 
Connected to database: lapcart
2022/08/01 15:21:15 Api is listening on port: 8000
2022/08/01 15:22:58 
Connected to database: lapcart
2022/08/01 15:22:58 Api is listening on port: 8000
2022/08/01 15:23:54 
Connected to database: lapcart
2022/08/01 15:23:54 Api is listening on port: 8000
2022/08/01 15:25:37 
Connected to database: lapcart
2022/08/01 15:25:37 Api is listening on port: 8000
2022/08/01 15:25:57 
Connected to database: lapcart
2022/08/01 15:25:57 Api is listening on port: 8000
2022/08/01 15:27:17 
Connected to database: lapcart
2022/08/01 15:27:17 Api is listening on port: 8000
2022/08/01 15:28:36 
Connected to database: lapcart
2022/08/01 15:28:36 Api is listening on port: 8000
2022/08/01 16:57:17 
Connected to database: lapcart
2022/08/01 16:57:17 Api is listening on port: 8000
2022/08/01 20:33:20 
Connected to database: lapcart
2022/08/01 20:33:20 Api is listening on port: 8000
2022/08/01 20:35:52 
Connected to database: lapcart
2022/08/01 20:35:52 Api is listening on port: 8000
2022/08/01 20:36:52 
Connected to database: lapcart
2022/08/01 20:36:52 Api is listening on port: 8000
2022/08/01 20:39:56 
Connected to database: lapcart
2022/08/01 20:39:56 Api is listening on port: 8000
2022/08/01 20:41:55 
Connected to database: lapcart
2022/08/01 20:41:55 Api is listening on port: 8000
2022/08/01 20:42:14 
Connected to database: lapcart
2022/08/01 20:42:14 Api is listening on port: 8000
2022/08/01 20:42:48 
Connected to database: lapcart
2022/08/01 20:42:48 Api is listening on port: 8000
2022/08/01 22:28:05 
Connected to database: lapcart
2022/08/01 22:28:05 Api is listening on port: 8000
2022/08/02 14:16:02 
Connected to database: lapcart
2022/08/02 14:16:02 Api is listening on port: 8000
2022/08/02 14:19:07 
Connected to database: lapcart
2022/08/02 14:19:07 Api is listening on port: 8000
2022/08/02 14:21:20 
Connected to database: lapcart
2022/08/02 14:21:20 Api is listening on port: 8000
2022/08/02 14:21:49 Error pq: syntax error at or near "WHERE"
2022/08/02 14:21:49 Error Query prepare failed
2022/08/02 14:26:00 
Connected to database: lapcart
2022/08/02 14:26:00 Api is listening on port: 8000
2022/08/02 14:26:02 Error pq: syntax error at or near "WHERE"
2022/08/02 14:26:02 Error Query prepare failed
2022/08/02 14:26:16 Error pq: syntax error at or near "WHERE"
2022/08/02 14:26:16 Error Query prepare failed
2022/08/02 14:26:37 
Connected to database: lapcart
2022/08/02 14:26:37 Api is listening on port: 8000
2022/08/02 14:26:39 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:26:39 Error pq: syntax error at or near "WHERE"
2022/08/02 14:26:39 Error Query prepare failed
2022/08/02 14:28:19 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:19 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:19 Error Query prepare failed
2022/08/02 14:28:26 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:26 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:26 Error Query prepare failed
2022/08/02 14:28:46 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:46 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:46 Error Query prepare failed
2022/08/02 14:28:46 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:46 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:46 Error Query prepare failed
2022/08/02 14:28:47 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:47 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:47 Error Query prepare failed
2022/08/02 14:28:47 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:28:47 Error pq: syntax error at or near "WHERE"
2022/08/02 14:28:47 Error Query prepare failed
2022/08/02 14:28:58 
Connected to database: lapcart
2022/08/02 14:28:58 Api is listening on port: 8000
2022/08/02 14:29:02 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:29:02 Error pq: syntax error at or near "WHERE"
2022/08/02 14:29:02 Error Query prepare failed
2022/08/02 14:29:57 
Connected to database: lapcart
2022/08/02 14:29:57 Api is listening on port: 8000
2022/08/02 14:29:59 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:29:59 Error pq: syntax error at or near "WHERE"
2022/08/02 14:29:59 Error Query prepare failed
2022/08/02 14:30:37 
Connected to database: lapcart
2022/08/02 14:30:37 Api is listening on port: 8000
2022/08/02 14:30:39 []
2022/08/02 14:30:39 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE ;
2022/08/02 14:30:39 Error pq: syntax error at or near "WHERE"
2022/08/02 14:30:39 Error Query prepare failed
2022/08/02 14:31:14 [{0 Notebook }]
2022/08/02 14:31:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
			  ORDER BY
			     p.name 
				 LIMIT $2 OFFSET $3
				 WHERE c.name IN ( $1 ,);
2022/08/02 14:31:14 Error pq: syntax error at or near "WHERE"
2022/08/02 14:31:14 Error Query prepare failed
2022/08/02 14:36:32 
Connected to database: lapcart
2022/08/02 14:36:32 Api is listening on port: 8000
2022/08/02 14:36:34 [{0 Notebook }]
2022/08/02 14:36:34 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ( $1 ,)ORDER BY
					 p.name 
					 LIMIT $2 OFFSET $3;
2022/08/02 14:36:34 Error pq: syntax error at or near ")"
2022/08/02 14:36:34 Error Query prepare failed
2022/08/02 14:38:13 
Connected to database: lapcart
2022/08/02 14:38:13 Api is listening on port: 8000
2022/08/02 14:38:17 [{0 Notebook }]
2022/08/02 14:38:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ( $1 )ORDER BY
					 p.name 
					 LIMIT $2 OFFSET $3;
2022/08/02 14:38:17 Error pq: operator does not exist: character varying = bigint
2022/08/02 14:38:17 Error Query prepare failed
2022/08/02 14:42:53 
Connected to database: lapcart
2022/08/02 14:42:53 Api is listening on port: 8000
2022/08/02 14:42:55 [{0 Notebook }]
2022/08/02 14:42:55 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ( $1 )ORDER BY
					 p.name 
					 LIMIT $2 OFFSET $3;
2022/08/02 14:42:55 Error pq: operator does not exist: character varying = bigint
2022/08/02 14:42:55 Error Query prepare failed
2022/08/02 14:43:24 
Connected to database: lapcart
2022/08/02 14:43:24 Api is listening on port: 8000
2022/08/02 14:43:26 [{0 Notebook }]
2022/08/02 14:43:26 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($1)ORDER BY
					 p.name 
					 LIMIT $2 OFFSET $3;
2022/08/02 14:43:26 Error pq: operator does not exist: character varying = bigint
2022/08/02 14:43:26 Error Query prepare failed
2022/08/02 14:44:01 
Connected to database: lapcart
2022/08/02 14:44:01 Api is listening on port: 8000
2022/08/02 14:44:02 [{0 Notebook }]
2022/08/02 14:44:02 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($1)
					 ORDER BY
					 p.name 
					 LIMIT $2 OFFSET $3;
2022/08/02 14:44:02 Error pq: operator does not exist: character varying = bigint
2022/08/02 14:44:02 Error Query prepare failed
2022/08/02 14:44:50 
Connected to database: lapcart
2022/08/02 14:44:50 Api is listening on port: 8000
2022/08/02 14:44:51 [{0 Notebook }]
2022/08/02 14:44:51 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($1)
					 ORDER BY
					 p.name 
					;
2022/08/02 14:44:51 Error pq: operator does not exist: character varying = bigint
2022/08/02 14:44:51 Error Query prepare failed
2022/08/02 14:52:24 
Connected to database: lapcart
2022/08/02 14:52:24 Api is listening on port: 8000
2022/08/02 14:52:26 [{0 Notebook }]
2022/08/02 14:52:26 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ('$1')
					 ORDER BY
					 p.name 
					;
2022/08/02 14:54:39 
Connected to database: lapcart
2022/08/02 14:54:39 Api is listening on port: 8000
2022/08/02 14:54:41 Notebook
2022/08/02 14:54:41 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ('$1')
					 ORDER BY
					 p.name 
					;
2022/08/02 14:56:43 
Connected to database: lapcart
2022/08/02 14:56:43 Api is listening on port: 8000
2022/08/02 14:56:45 Notebook
2022/08/02 14:56:45 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ('$2')
					 ORDER BY
					 p.name 
					;
2022/08/02 14:57:10 
Connected to database: lapcart
2022/08/02 14:57:10 Api is listening on port: 8000
2022/08/02 14:57:14 Notebook
2022/08/02 14:57:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 14:57:50 Notebook
2022/08/02 14:57:50 Gaming Laptop
2022/08/02 14:57:50 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$2)
					 ORDER BY
					 p.name 
					;
2022/08/02 14:58:36 
Connected to database: lapcart
2022/08/02 14:58:36 Api is listening on port: 8000
2022/08/02 14:58:38 Notebook
2022/08/02 14:58:38 Gaming Laptop
2022/08/02 14:58:38 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)
					 ORDER BY
					 p.name 
					;
2022/08/02 14:59:03 Notebook
2022/08/02 14:59:03 Gaming Laptop
2022/08/02 14:59:03 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)
					 ORDER BY
					 p.name 
					;
2022/08/02 14:59:27 Notebook
2022/08/02 14:59:27 Gaming Laptop
2022/08/02 14:59:27 Office Laptop
2022/08/02 14:59:27 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3,$4)
					 ORDER BY
					 p.name 
					;
2022/08/02 15:03:53 
Connected to database: lapcart
2022/08/02 15:03:53 Api is listening on port: 8000
2022/08/02 15:05:00 Notebook
2022/08/02 15:05:00 Gaming Laptop
2022/08/02 15:05:00 Apple
2022/08/02 15:05:00 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)AND b.brand IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 15:05:00 Error pq: column b.brand does not exist
2022/08/02 15:05:00 Error Query prepare failed
2022/08/02 15:05:16 
Connected to database: lapcart
2022/08/02 15:05:16 Api is listening on port: 8000
2022/08/02 15:05:17 Notebook
2022/08/02 15:05:17 Gaming Laptop
2022/08/02 15:05:17 Apple
2022/08/02 15:05:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)AND b.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 15:05:50 Notebook
2022/08/02 15:05:50 Office Laptop
2022/08/02 15:05:50 Apple
2022/08/02 15:05:50 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)AND b.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 15:06:24 Apple
2022/08/02 15:06:24 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE AND b.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 15:06:24 Error pq: syntax error at or near "AND"
2022/08/02 15:06:24 Error Query prepare failed
2022/08/02 15:07:03 
Connected to database: lapcart
2022/08/02 15:07:03 Api is listening on port: 8000
2022/08/02 15:07:05 Apple
2022/08/02 15:07:05 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE b.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:13:17 
Connected to database: lapcart
2022/08/02 22:13:17 Api is listening on port: 8000
2022/08/02 22:13:54 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:14:31 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE b.name IN ($2)AND p.color IN ($3)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:15:02 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE b.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:17:44 
Connected to database: lapcart
2022/08/02 22:17:44 Api is listening on port: 8000
2022/08/02 22:17:58 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE pr.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:18:08 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE pr.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:18:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE pr.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:23:00 
Connected to database: lapcart
2022/08/02 22:23:00 Api is listening on port: 8000
2022/08/02 22:23:16 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:23:22 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.name IN ($2)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:24:17 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:25:10 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:25:19 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:25:28 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:26:07 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:26:32 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:26:40 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/02 22:26:54 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					;
2022/08/03 08:21:08 
Connected to database: lapcart
2022/08/03 08:21:08 Api is listening on port: 8000
2022/08/03 08:21:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					LIMIT $;5
					
				   OFFSET $;6
2022/08/03 08:21:14 Error pq: syntax error at or near "$"
2022/08/03 08:21:14 Error Query prepare failed
2022/08/03 08:23:11 
Connected to database: lapcart
2022/08/03 08:23:11 Api is listening on port: 8000
2022/08/03 08:23:13 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6
2022/08/03 08:25:23 
Connected to database: lapcart
2022/08/03 08:25:23 Api is listening on port: 8000
2022/08/03 08:25:24 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/03 08:25:33 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/03 08:25:37 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)AND pr.name IN ($3)AND p.name IN ($4)
					 ORDER BY
					 p.name 
					LIMIT $5 OFFSET $6;
2022/08/03 11:04:30 
Connected to database: lapcart
2022/08/03 11:04:30 Api is listening on port: 8000
2022/08/03 11:09:47 
Connected to database: lapcart
2022/08/03 11:09:47 Api is listening on port: 8000
2022/08/03 11:10:24 
Connected to database: lapcart
2022/08/03 11:10:24 Api is listening on port: 8000
2022/08/03 11:11:37 
Connected to database: lapcart
2022/08/03 11:11:37 Api is listening on port: 8000
2022/08/03 11:14:19 
Connected to database: lapcart
2022/08/03 11:14:19 Api is listening on port: 8000
2022/08/03 11:19:07 
Connected to database: lapcart
2022/08/03 11:19:07 Api is listening on port: 8000
2022/08/03 11:21:01 
Connected to database: lapcart
2022/08/03 11:21:01 Api is listening on port: 8000
2022/08/03 11:21:19 
Connected to database: lapcart
2022/08/03 11:21:19 Api is listening on port: 8000
2022/08/03 11:24:55 
Connected to database: lapcart
2022/08/03 11:24:55 Api is listening on port: 8000
2022/08/03 11:24:57 error adding product to cart
2022/08/03 11:31:34 
Connected to database: lapcart
2022/08/03 11:31:34 Api is listening on port: 8000
2022/08/03 11:31:37 error in inserting cart
2022/08/03 11:31:37 error adding product to cart
2022/08/03 11:32:44 
Connected to database: lapcart
2022/08/03 11:32:44 Api is listening on port: 8000
2022/08/03 11:32:50 error, product out of stock, product left:  0
2022/08/03 16:09:24 
Connected to database: lapcart
2022/08/03 16:09:24 Api is listening on port: 8000
2022/08/03 19:57:44 
Connected to database: lapcart
2022/08/03 19:57:44 Api is listening on port: 8000
2022/08/03 19:59:41 sql: no rows in result set
2022/08/03 20:02:59 
Connected to database: lapcart
2022/08/03 20:02:59 Api is listening on port: 8000
2022/08/03 20:03:15 sql: no rows in result set
2022/08/03 22:21:39 
Connected to database: lapcart
2022/08/03 22:21:39 Api is listening on port: 8000
2022/08/03 22:28:00 
Connected to database: lapcart
2022/08/03 22:28:00 Api is listening on port: 8000
2022/08/03 22:28:06 pq: syntax error at or near "TABLE"
2022/08/03 22:28:38 
Connected to database: lapcart
2022/08/03 22:28:38 Api is listening on port: 8000
2022/08/03 22:28:40 pq: syntax error at or near "TABLE"
2022/08/03 22:29:01 
Connected to database: lapcart
2022/08/03 22:29:01 Api is listening on port: 8000
2022/08/03 22:29:02 pq: there is no unique or exclusion constraint matching the ON CONFLICT specification
2022/08/03 22:30:26 
Connected to database: lapcart
2022/08/03 22:30:26 Api is listening on port: 8000
2022/08/04 09:46:09 
Connected to database: lapcart
2022/08/04 09:46:09 Api is listening on port: 8000
2022/08/04 09:51:42 
Connected to database: lapcart
2022/08/04 09:51:42 Api is listening on port: 8000
2022/08/04 10:02:28 
Connected to database: lapcart
2022/08/04 10:02:28 Api is listening on port: 8000
2022/08/04 10:04:20 
Connected to database: lapcart
2022/08/04 10:04:20 Api is listening on port: 8000
2022/08/04 10:06:22 
Connected to database: lapcart
2022/08/04 10:06:22 Api is listening on port: 8000
2022/08/04 10:06:24 0
2022/08/04 10:06:24 <nil>
2022/08/04 10:06:25 0
2022/08/04 10:06:25 <nil>
2022/08/04 10:06:26 0
2022/08/04 10:06:26 <nil>
2022/08/04 10:06:42 0
2022/08/04 10:06:42 <nil>
2022/08/04 10:12:11 
Connected to database: lapcart
2022/08/04 10:12:11 Api is listening on port: 8000
2022/08/04 10:12:27 error in getting cart
2022/08/04 10:12:28 error in getting cart
2022/08/04 10:12:28 error in getting cart
2022/08/04 10:12:29 error in getting cart
2022/08/04 10:12:29 error in getting cart
2022/08/04 10:12:30 error in getting cart
2022/08/04 10:12:30 error in getting cart
2022/08/04 10:13:19 
Connected to database: lapcart
2022/08/04 10:13:19 Api is listening on port: 8000
2022/08/04 10:13:22 error in getting cart
2022/08/04 10:13:22 error in getting cart
2022/08/04 10:13:23 error in getting cart
2022/08/04 10:13:23 error in getting cart
2022/08/04 10:13:24 error in getting cart
2022/08/04 10:13:25 error in getting cart
2022/08/04 10:13:25 error in getting cart
2022/08/04 10:14:32 
Connected to database: lapcart
2022/08/04 10:14:32 Api is listening on port: 8000
2022/08/04 11:05:21 0
2022/08/04 11:05:21 error in getting cart:  <nil>
2022/08/04 11:05:45 
Connected to database: lapcart
2022/08/04 11:05:45 Api is listening on port: 8000
2022/08/04 11:05:46 0
2022/08/04 11:05:46 error in getting cart:  <nil>
2022/08/04 11:06:23 
Connected to database: lapcart
2022/08/04 11:06:23 Api is listening on port: 8000
2022/08/04 11:20:50 
Connected to database: lapcart
2022/08/04 11:20:50 Api is listening on port: 8000
2022/08/04 11:24:13 
Connected to database: lapcart
2022/08/04 11:24:13 Api is listening on port: 8000
2022/08/04 11:24:39 
Connected to database: lapcart
2022/08/04 11:24:39 Api is listening on port: 8000
2022/08/04 11:24:52 Flat10
2022/08/04 11:24:52 0
2022/08/04 11:26:07 
Connected to database: lapcart
2022/08/04 11:26:07 Api is listening on port: 8000
2022/08/04 11:26:14 Flat10
2022/08/04 11:26:14 pq: syntax error at or near ")"
2022/08/04 11:26:14 0
2022/08/04 11:26:43 
Connected to database: lapcart
2022/08/04 11:26:43 Api is listening on port: 8000
2022/08/04 11:27:35 Flat10
2022/08/04 11:27:35 pq: syntax error at or near ")"
2022/08/04 11:27:35 0
2022/08/04 11:27:35 Flat10
2022/08/04 11:27:35 pq: syntax error at or near ")"
2022/08/04 11:27:35 0
2022/08/04 11:28:42 
Connected to database: lapcart
2022/08/04 11:28:42 Api is listening on port: 8000
2022/08/04 11:28:52 Flat10
2022/08/04 11:28:52 <nil>
2022/08/04 11:28:52 2
2022/08/04 12:16:31 
Connected to database: lapcart
2022/08/04 12:16:31 Api is listening on port: 8000
2022/08/04 14:41:38 
Connected to database: lapcart
2022/08/04 14:41:38 Api is listening on port: 8000
2022/08/04 14:48:45 Error pq: column "is_paid" of relation "product" does not exist
2022/08/04 14:48:45 Error Query prepare failed
2022/08/04 14:48:45 error in payment:  pq: column "is_paid" of relation "product" does not exist
2022/08/04 14:49:23 
Connected to database: lapcart
2022/08/04 14:49:23 Api is listening on port: 8000
2022/08/04 14:50:12 
Connected to database: lapcart
2022/08/04 14:50:12 Api is listening on port: 8000
2022/08/04 14:50:15 error in payment:  pq: insert or update on table "order_details" violates foreign key constraint "order_details_payment_id_fkey"
2022/08/04 14:52:08 
Connected to database: lapcart
2022/08/04 14:52:08 Api is listening on port: 8000
2022/08/04 14:52:10 
					UPDATE
					   order_details
					SET
					   is_paid = true, updated_at = $1, payment_id = $2
					
	,total = $3, coupon_id = $4
								WHERE
								id = $5;
2022/08/04 14:52:10 error in payment:  pq: insert or update on table "order_details" violates foreign key constraint "order_details_payment_id_fkey"
2022/08/04 14:53:08 
Connected to database: lapcart
2022/08/04 14:53:08 Api is listening on port: 8000
2022/08/04 14:53:10 payment id:  4
2022/08/04 14:53:10 
					UPDATE
					   order_details
					SET
					   is_paid = true, updated_at = $1, payment_id = $2
					
	,total = $3, coupon_id = $4
								WHERE
								id = $5;
2022/08/04 14:53:10 error in payment:  pq: insert or update on table "order_details" violates foreign key constraint "order_details_payment_id_fkey"
2022/08/04 14:56:03 
Connected to database: lapcart
2022/08/04 14:56:03 Api is listening on port: 8000
2022/08/04 14:56:05 payment id:  5
2022/08/04 14:56:05 
					UPDATE
					   order_details
					SET
					   is_paid = true, updated_at = $1, payment_id = $2
					
	,total = $3, coupon_id = $4
								WHERE
								id = $5;
2022/08/04 14:56:05 arg : [2022-08-04 14:56:05 +0530 IST 5 63000 2 1]
2022/08/04 14:56:05 error in payment:  pq: insert or update on table "order_details" violates foreign key constraint "order_details_payment_id_fkey"
2022/08/04 14:58:22 
Connected to database: lapcart
2022/08/04 14:58:22 Api is listening on port: 8000
2022/08/04 14:58:24 payment id:  6
2022/08/04 14:58:24 
					UPDATE
					   order_details
					SET
					   is_paid = true, payment_id = $1 ,updated_at = $2
					
	,total = $3, coupon_id = $4
								WHERE
								id = $5;
2022/08/04 14:58:24 arg : [6 2022-08-04 14:58:24 +0530 IST 63000 2 1]
2022/08/04 14:58:24 error in payment:  pq: insert or update on table "order_details" violates foreign key constraint "order_details_payment_id_fkey"
2022/08/04 15:01:34 
Connected to database: lapcart
2022/08/04 15:01:34 Api is listening on port: 8000
2022/08/04 15:01:38 payment id:  7
2022/08/04 15:01:38 
					UPDATE
					   order_details
					SET
					   is_paid = true, payment_id = $1 ,updated_at = $2
					
	,total = $3, coupon_id = $4
								WHERE
								id = $5;
2022/08/04 15:01:38 arg : [7 2022-08-04 15:01:38 +0530 IST 63000 2 1]
2022/08/04 15:02:29 error in verifying coupon:  sql: no rows in result set
2022/08/04 15:07:29 
Connected to database: lapcart
2022/08/04 15:07:29 Api is listening on port: 8000
2022/08/04 15:09:41 
Connected to database: lapcart
2022/08/04 15:09:41 Api is listening on port: 8000
2022/08/04 15:52:26 
Connected to database: lapcart
2022/08/04 15:52:26 Api is listening on port: 8000
2022/08/04 15:56:51 
Connected to database: lapcart
2022/08/04 15:56:51 Api is listening on port: 8000
2022/08/04 16:24:47 
Connected to database: lapcart
2022/08/04 16:24:47 Api is listening on port: 8000
2022/08/06 12:27:38 
Connected to database: lapcart
2022/08/06 12:27:38 Api is listening on port: 8000
2022/08/06 18:42:42 
Connected to database: lapcart
2022/08/06 18:42:42 Api is listening on port: 8000
2022/08/06 18:52:06 
Connected to database: lapcart
2022/08/06 18:52:06 Api is listening on port: 8000
2022/08/06 18:53:00 
Connected to database: lapcart
2022/08/06 18:53:00 Api is listening on port: 8000
2022/08/06 20:07:51 
Connected to database: lapcart
2022/08/06 20:07:51 Api is listening on port: 8000
2022/08/06 20:25:32 
Connected to database: lapcart
2022/08/06 20:25:32 Api is listening on port: 8000
2022/08/06 20:28:03 
Connected to database: lapcart
2022/08/06 20:28:03 Api is listening on port: 8000
2022/08/06 20:28:05 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)AND pr.name IN ($4)AND p.name IN ($5)
					 ORDER BY
					 p.name 
					LIMIT $6 OFFSET $7;
2022/08/06 20:32:51 
Connected to database: lapcart
2022/08/06 20:32:51 Api is listening on port: 8000
2022/08/06 20:32:53 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)AND pr.name IN ($4)AND p.name IN ($5)
					 ORDER BY
					 p.name 
					LIMIT $6 OFFSET $7;
2022/08/06 20:34:04 
Connected to database: lapcart
2022/08/06 20:34:04 Api is listening on port: 8000
2022/08/06 20:34:06 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)AND pr.name IN ($4)AND p.name IN ($5)
					 ORDER BY
					 p.name 
					LIMIT $6 OFFSET $7;
2022/08/06 20:34:24 
Connected to database: lapcart
2022/08/06 20:34:24 Api is listening on port: 8000
2022/08/06 20:34:25 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)AND pr.name IN ($4)AND p.name IN ($5)
					 ORDER BY
					 p.name 
					LIMIT $6 OFFSET $7;
2022/08/06 20:35:30 
Connected to database: lapcart
2022/08/06 20:35:30 Api is listening on port: 8000
2022/08/06 20:35:32 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:35:51 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:36:14 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:36:42 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2,$3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:40:31 
Connected to database: lapcart
2022/08/06 20:40:31 Api is listening on port: 8000
2022/08/06 20:40:45 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:40:54 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:40:58 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)AND p.color IN ($3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:41:04 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:41:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:41:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:41:12 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:42:12 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:42:30 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:44:50 
Connected to database: lapcart
2022/08/06 20:44:50 Api is listening on port: 8000
2022/08/06 20:44:52 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 20:45:21 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2,$3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 20:46:16 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/06 20:46:16 Error pq: syntax error at or near "ORDER"
2022/08/06 20:46:16 Error Query prepare failed
2022/08/06 21:04:22 
Connected to database: lapcart
2022/08/06 21:04:22 Api is listening on port: 8000
2022/08/06 21:04:23 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/06 21:11:30 
Connected to database: lapcart
2022/08/06 21:11:30 Api is listening on port: 8000
2022/08/06 21:11:38 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE c.name IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 21:11:49 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE p.color IN ($2)
					 ORDER BY
					 p.name 
					LIMIT $3 OFFSET $4;
2022/08/06 21:12:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 WHERE b.name IN ($2)AND p.color IN ($3)
					 ORDER BY
					 p.name 
					LIMIT $4 OFFSET $5;
2022/08/06 21:12:22 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/06 21:20:58 
Connected to database: lapcart
2022/08/06 21:20:58 Api is listening on port: 8000
2022/08/06 21:21:02 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
2022/08/07 01:03:11 WITH wishlist AS 
			  (
			     SELECT
			  	  true as wishlist,
			  	  w.product_code 
			     FROM
			  	  wishlist w 
			     WHERE
			  	  w.user_id = $1
			  )
			  ,
			  discount AS 
			  (
			     SELECT
			  	  d.id,
			  	  d.name,
			  	  d.percentage,
			  	  d.valid_till 
			     FROM
			  	  discount d 
			     WHERE
			  	  status = true 
			  	  AND valid_till > NOW() 
			  )
			  ,
			  product AS 
			  (
			     SELECT
			  	  ARRAY_AGG(p.id) AS id,
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.image,
			  	  p.price,
			  	  w.wishlist,
				  p.color,
			  	  p.discount_id,
			  	  ARRAY_AGG(color) AS colors 
			     FROM
			  	  product p 
			  	  LEFT JOIN
			  		 wishlist w 
			  		 ON p.code = w.product_code 
			     GROUP BY
			  	  p.code,
			  	  p.name,
			  	  p.category_id,
			  	  p.brand_id,
			  	  p.processor_id,
			  	  p.discount_id,
			  	  p.image,
			  	  p.price,
				  p.color,
			  	  w.wishlist
			  )
			  SELECT
			     COUNT(*) OVER(),
			     p.id,
				 p.code,
			     p.name,
			     c.name,
			     b.name,
			     pr.name,
			     p.image,
			     p.price,
			     COALESCE(p.wishlist, false),
			     p.colors,
			     COALESCE(d.name, ''),
			     COALESCE(cast((p.price * (1 - d.percentage / 100)) AS NUMERIC(10,2)),0) AS discount_price 
			  FROM
			     product p 
			     JOIN
			  	  category c 
			  	  ON p.category_id = c.id 
			     JOIN
			  	  brand b 
			  	  ON p.brand_id = b.id 
			     JOIN
			  	  processor pr 
			  	  ON p.processor_ID = pr.id 
			     LEFT JOIN
			  	  discount d 
			  	  ON p.discount_id = d.id 
				 
					 ORDER BY
					 p.name 
					LIMIT $2 OFFSET $3;
